name: Deploy Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'
  AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
  AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  CLIENT_ORIGIN_URL: ${{ secrets.CLIENT_ORIGIN_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Clean up failed stack
        run: |
          STACK_STATUS=$(aws cloudformation describe-stacks --stack-name taskvision-backend --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo "STACK_NOT_FOUND")
          if [[ "$STACK_STATUS" == "ROLLBACK_COMPLETE" || "$STACK_STATUS" == "CREATE_FAILED" || "$STACK_STATUS" == "ROLLBACK_FAILED" || "$STACK_STATUS" == "DELETE_FAILED" ]]; then
            echo "Stack is in a failed state. Deleting..."
            aws cloudformation delete-stack --stack-name taskvision-backend
            echo "Waiting for stack deletion to complete..."
            aws cloudformation wait stack-delete-complete --stack-name taskvision-backend
          elif [[ "$STACK_STATUS" == "STACK_NOT_FOUND" ]]; then
            echo "Stack does not exist. Proceeding with deployment."
          else
            echo "Stack is in a valid state. Proceeding with deployment."
          fi

      - name: SAM Deploy
        run: |
          sam deploy \
            --stack-name taskvision-backend \
            --template-file .aws-sam/build/template.yaml \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --resolve-s3 \
            --parameter-overrides \
              Environment=prod 