name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - '**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to AWS SAM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: npm ci
        working-directory: .

      - name: Build SAM application
        run: sam build
        working-directory: .

      - name: Check and delete ROLLBACK_COMPLETE stack
        run: |
          STACK_NAME="taskvision-backend"
          STACK_STATUS=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo "STACK_NOT_FOUND")
          if [[ "$STACK_STATUS" == "ROLLBACK_COMPLETE" ]]; then
            echo "Stack is in ROLLBACK_COMPLETE state. Deleting stack..."
            aws cloudformation delete-stack --stack-name $STACK_NAME
            echo "Waiting for stack deletion to complete..."
            aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME
          fi

      - name: Deploy to AWS
        run: |
          echo "Debug: Environment variables"
          echo "ENVIRONMENT: ${{ secrets.ENVIRONMENT }}"
          echo "DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}"
          echo "TABLE_NAME: ${{ secrets.TABLE_NAME }}"
          echo "CUSTOM_DOMAIN_NAME: ${{ secrets.CUSTOM_DOMAIN_NAME }}"
          echo "CERTIFICATE_ARN: ***"

          sam deploy \
            --stack-name taskvision-backend \
            --region ${{ secrets.AWS_REGION }} \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --force-upload \
            --parameter-overrides \
              Environment=${{ secrets.ENVIRONMENT }} \
              ClientOriginUrl=https://${{ secrets.DOMAIN_NAME }} \
              TableName=${{ secrets.TABLE_NAME }} \
              CustomDomainName=${{ secrets.CUSTOM_DOMAIN_NAME }} \
              CertificateArn=${{ secrets.CERTIFICATE_ARN }}
        working-directory: .
