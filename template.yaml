AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Backend API for TaskVision

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name for resource naming
Conditions:
  IsProd: !Equals [!Ref Environment, 'prod']
  TableExists: !Equals [!Ref 'AWS::NoValue', !GetAtt TaskVisionTable, 'TableName']

Resources:
  TaskVisionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/lambda.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TABLE_NAME: !If 
            - TableExists
            - !GetAtt TaskVisionTable.TableName
            - !Sub 'taskvision-${Environment}-table'
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !If 
              - TableExists
              - !GetAtt TaskVisionTable.TableName
              - !Sub 'taskvision-${Environment}-table'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref TaskVisionApi
Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub 'https://${TaskVisionApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/'
  FrontendBucket:
    Description: S3 bucket for frontend hosting
    Value: !Ref S3Bucket
  FrontendWebsiteURL:
    Description: URL of the frontend website
    Value: !Sub 'http://${S3Bucket}.s3-website-${AWS::Region}.amazonaws.com'
    