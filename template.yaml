AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: TaskVision backend - deploys Lambda + API Gateway with proper CORS

Globals:
  Function:
    Timeout: 10
    Runtime: nodejs18.x
    MemorySize: 128
    Architectures:
      - x86_64

Parameters:
  ClientOriginUrl:
    Type: String
  TableName:
    Type: String
  Auth0Domain:
    Type: String
  Auth0Audience:
    Type: String

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'"
        AllowOrigin: !Sub "'${ClientOriginUrl}'"
        AllowCredentials: true
        MaxAge: "'86400'"

  TaskVisionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambda.main  # matches export const main = ...
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CLIENT_ORIGIN_URL: !Ref ClientOriginUrl
          AUTH0_DOMAIN: !Ref Auth0Domain
          AUTH0_AUDIENCE: !Ref Auth0Audience
      Events:
        ProxyApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/lambda.ts
        Minify: true
        Target: es2020
        Sourcemap: true
        External:
          - aws-sdk

Outputs:
  ApiUrl:
    Description: API Gateway endpoint (default)
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  FunctionName:
    Description: Name of Lambda function
    Value: !Ref TaskVisionFunction
